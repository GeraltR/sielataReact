/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
.pointer-events-none {
  pointer-events: none;
}
.invisible {
  visibility: hidden;
}
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.top-2\/4 {
  top: calc(2/4 * 100%);
}
.left-2\/4 {
  left: calc(2/4 * 100%);
}
.z-10 {
  z-index: 10;
}
.z-50 {
  z-index: 50;
}
.col-span-1 {
  grid-column: span 1 / span 1;
}
.col-span-2 {
  grid-column: span 2 / span 2;
}
.col-span-10 {
  grid-column: span 10 / span 10;
}
.float-left {
  float: left;
}
.float-right {
  float: right;
}
.container {
  width: 100%;
}
.m-auto {
  margin: auto;
}
.mx-auto {
  margin-inline: auto;
}
.my-auto {
  margin-block: auto;
}
.mt-\[0px\] {
  margin-top: 0px;
}
.mt-\[10\%\] {
  margin-top: 10%;
}
.mt-\[10px\] {
  margin-top: 10px;
}
.mt-\[50px\] {
  margin-top: 50px;
}
.mt-\[300px\] {
  margin-top: 300px;
}
.mt-px {
  margin-top: 1px;
}
.ml-\[0px\] {
  margin-left: 0px;
}
.ml-\[30px\] {
  margin-left: 30px;
}
.ml-\[40\%\] {
  margin-left: 40%;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.h-full {
  height: 100%;
}
.h-max {
  height: max-content;
}
.max-h-\[2rem\] {
  max-height: 2rem;
}
.max-h-\[60dvh\] {
  max-height: 60dvh;
}
.min-h-screen {
  min-height: 100vh;
}
.w-3\/5 {
  width: calc(3/5 * 100%);
}
.w-\[2\%\] {
  width: 2%;
}
.w-\[3\%\] {
  width: 3%;
}
.w-\[5\%\] {
  width: 5%;
}
.w-\[10\%\] {
  width: 10%;
}
.w-\[12rem\] {
  width: 12rem;
}
.w-\[14rem\] {
  width: 14rem;
}
.w-\[15\%\] {
  width: 15%;
}
.w-\[20\%\] {
  width: 20%;
}
.w-\[25\%\] {
  width: 25%;
}
.w-\[35\%\] {
  width: 35%;
}
.w-\[55\%\] {
  width: 55%;
}
.w-\[60\%\] {
  width: 60%;
}
.w-\[75\%\] {
  width: 75%;
}
.w-\[80\%\] {
  width: 80%;
}
.w-\[100\%\] {
  width: 100%;
}
.w-auto {
  width: auto;
}
.w-dvw {
  width: 100dvw;
}
.w-fit {
  width: fit-content;
}
.w-full {
  width: 100%;
}
.w-max {
  width: max-content;
}
.max-w-\[8rem\] {
  max-width: 8rem;
}
.table-auto {
  table-layout: auto;
}
.table-fixed {
  table-layout: fixed;
}
.-translate-x-2\/4 {
  --tw-translate-x: calc(calc(2/4 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-2\/4 {
  --tw-translate-y: calc(calc(2/4 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.scale-0 {
  --tw-scale-x: 0%;
  --tw-scale-y: 0%;
  --tw-scale-z: 0%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.scale-100 {
  --tw-scale-x: 100%;
  --tw-scale-y: 100%;
  --tw-scale-z: 100%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.cursor-auto {
  cursor: auto;
}
.cursor-not-allowed {
  cursor: not-allowed;
}
.cursor-pointer {
  cursor: pointer;
}
.list-inside {
  list-style-position: inside;
}
.appearance-none {
  appearance: none;
}
.columns-\[39\.5rem\] {
  columns: 39.5rem;
}
.break-after-page {
  break-after: page;
}
.auto-cols-max {
  grid-auto-columns: max-content;
}
.grid-flow-dense {
  grid-auto-flow: dense;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-items-center {
  justify-items: center;
}
.justify-items-end {
  justify-items: end;
}
.justify-items-stretch {
  justify-items: stretch;
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-x-0 {
  border-inline-style: var(--tw-border-style);
  border-inline-width: 0px;
}
.bg-\[\#FCFDFE\] {
  background-color: #FCFDFE;
}
.bg-\[stone-600\] {
  background-color: stone-600;
}
.bg-transparent {
  background-color: transparent;
}
.bg-\[url\(\'\.\/assets\/images\/bg\.jpg\'\)\] {
  background-image: url('./assets/images/bg.jpg');
}
.bg-cover {
  background-size: cover;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-start {
  text-align: start;
}
.tracking-\[\.1em\] {
  --tw-tracking: .1em;
  letter-spacing: .1em;
}
.tracking-\[\.25em\] {
  --tw-tracking: .25em;
  letter-spacing: .25em;
}
.text-\[\#000000\] {
  color: #000000;
}
.text-\[\#FFFFFF\] {
  color: #FFFFFF;
}
.text-\[\#adadad\] {
  color: #adadad;
}
.capitalize {
  text-transform: capitalize;
}
.uppercase {
  text-transform: uppercase;
}
.placeholder-\[\#ACB6BE\] {
  &::placeholder {
    color: #ACB6BE;
  }
}
.opacity-0 {
  opacity: 0%;
}
.opacity-10 {
  opacity: 10%;
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.select-none {
  -webkit-user-select: none;
  user-select: none;
}
.peer-checked\:opacity-100 {
  &:is(:where(.peer):checked ~ *) {
    opacity: 100%;
  }
}
.before\:absolute {
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
}
.before\:top-2\/4 {
  &::before {
    content: var(--tw-content);
    top: calc(2/4 * 100%);
  }
}
.before\:left-2\/4 {
  &::before {
    content: var(--tw-content);
    left: calc(2/4 * 100%);
  }
}
.before\:block {
  &::before {
    content: var(--tw-content);
    display: block;
  }
}
.before\:-translate-x-2\/4 {
  &::before {
    content: var(--tw-content);
    --tw-translate-x: calc(calc(2/4 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.before\:-translate-y-2\/4 {
  &::before {
    content: var(--tw-content);
    --tw-translate-y: calc(calc(2/4 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.before\:rounded-full {
  &::before {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
}
.before\:opacity-0 {
  &::before {
    content: var(--tw-content);
    opacity: 0%;
  }
}
.before\:transition-opacity {
  &::before {
    content: var(--tw-content);
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
}
.before\:content-\[\'\+\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: '+';
    content: var(--tw-content);
  }
}
.before\:content-\[\'-\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: '-';
    content: var(--tw-content);
  }
}
.before\:content-\[\'A\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'A';
    content: var(--tw-content);
  }
}
.before\:content-\[\'K\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'K';
    content: var(--tw-content);
  }
}
.before\:content-\[\'Kto\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'Kto';
    content: var(--tw-content);
  }
}
.before\:content-\[\'M\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'M';
    content: var(--tw-content);
  }
}
.before\:content-\[\'M_\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'M ';
    content: var(--tw-content);
  }
}
.before\:content-\[\'Model\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'Model';
    content: var(--tw-content);
  }
}
.before\:content-\[\'Nr\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'Nr';
    content: var(--tw-content);
  }
}
.before\:content-\[\'P\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'P';
    content: var(--tw-content);
  }
}
.before\:content-\[\'S\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'S';
    content: var(--tw-content);
  }
}
.before\:content-\[\'T\:\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'T:';
    content: var(--tw-content);
  }
}
.before\:content-\[\'W\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: 'W';
    content: var(--tw-content);
  }
}
.hover\:border-transparent {
  &:hover {
    @media (hover: hover) {
      border-color: transparent;
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:before\:opacity-10 {
  &:hover {
    @media (hover: hover) {
      &::before {
        content: var(--tw-content);
        opacity: 10%;
      }
    }
  }
}
.focus\:ring-1 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-4 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.focus-visible\:shadow-none {
  &:focus-visible {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.print\:block {
  @media print {
    display: block;
  }
}
.print\:hidden {
  @media print {
    display: none;
  }
}
.print\:bg-none {
  @media print {
    background-image: none;
  }
}
@layer base {
  @font-face {
    font-family: "Ubuntu Bold";
    font-weight: 500;
    src: url("./assets/font/Ubuntu-Bold.ttf");
  }
  @font-face {
    font-family: "Ubuntu Medium";
    font-weight: 200;
    src: url("./assets/font/Ubuntu-Medium.ttf");
  }
  @font-face {
    font-family: "Ubuntu Light";
    font-weight: 100;
    src: url("./assets/font/Ubuntu-Light.ttf");
  }
}
.g-captcha {
  margin: 0 auto;
  width: fit-content;
}
img {
  max-width: fit-content;
}
table.card-model th.card-model, td.card-model {
  border: 1px solid black !important;
  border-spacing: 5px 5px;
  padding-left: 4px;
}
th.card-model {
  padding: 10px 10px 10px 10px;
  width: 5%;
  text-align: center;
  font: 1em sans-serif;
  height: 40px;
  font-weight: bold;
}
td.card-model-duze {
  font-size: 20px;
  padding-left: 7px;
}
td.card-model-male {
  font-size: 14px;
}
.card-model span {
  display: flow-root;
}
.card-model-center {
  text-align: center;
  font-weight: 600;
}
.card-model-food-center {
  text-align: center;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-tracking: initial;
      --tw-content: "";
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
